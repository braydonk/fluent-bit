name: Build and run image tests for all architectures
on:
  # We cannot trigger just on PRs as these do not have write permissions to GHCR from forks.
  # See https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  # Workflows also only run on the default branch.
  workflow_run:
    workflows: ["PR trigger image workflow"]
    types:
      - completed

jobs:
    pr-set-pending-status:
      runs-on: ubuntu-latest
      steps:
        - uses: Sibz/github-status-action@v1
          with:
            authToken: ${{secrets.GITHUB_TOKEN}}
            context: 'PR image tests'
            state: 'pending'
            sha: ${{ github.event.workflow_run.head_sha }}

    pr-get-latest-tag:
      name: PR - get latest tag for source build
      runs-on: ubuntu-latest
      environment: pr
      outputs:
        latest_tag: ${{ steps.formatted_version.outputs.replaced }}
      steps:
        - uses: actions/checkout@v2
        - uses: actions-ecosystem/action-get-latest-tag@v1
          id: get-latest-tag
          with:
            semver_only: true
        - uses: frabert/replace-string-action@v2.0
          id: formatted_version
          with:
            pattern: '[v]*(.*)$'
            string: ${{ steps.get-latest-tag.outputs.tag }}
            replace-with: '$1'
            flags: 'g'

    pr-image-tests-build-images:
      name: PR - build images
      uses: fluent/fluent-bit/.github/workflows/call-build-images.yaml@master
      needs: pr-get-latest-tag
      with:
        version: ${{ needs.pr-get-latest-tag.outputs.latest_tag }}
        registry: ghcr.io
        username: ${{ github.actor }}
        image: ${{ github.repository }}/pr-${{ github.event.number }}
        environment: pr
      secrets:
        token: ${{ secrets.GITHUB_TOKEN }}

    pr-image-tests-smoke-test-images:
      name: PR - smoke test images
      needs: [pr-get-latest-tag, pr-image-tests-build-images]
      uses: fluent/fluent-bit/.github/workflows/call-test-images.yaml@master
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        image: ${{ github.repository }}/pr-${{ github.event.number }}
        image-tag: ${{ needs.pr-get-latest-tag.outputs.latest_tag }}
        environment: pr
      secrets:
        token: ${{ secrets.GITHUB_TOKEN }}

    pr-image-tests-smoke-test-multiarch-images:
      name: PR - multiarch smoke test images
      needs: [pr-get-latest-tag, pr-image-tests-build-images]
      uses: fluent/fluent-bit/.github/workflows/call-test-images.yaml@master
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        image: ${{ github.repository }}/pr-${{ github.event.number }}/multiarch
        image-tag: ${{ needs.pr-get-latest-tag.outputs.latest_tag }}
        environment: pr
      secrets:
        token: ${{ secrets.GITHUB_TOKEN }}

    pr-image-tests-classic-docker-build:
      name: PR - Classic docker build test
      needs: pr-get-latest-tag
      runs-on: ubuntu-latest
      environment: pr
      strategy:
        # A failure on one is probably shared
        fail-fast: true
        matrix:
          arch: [ amd64, arm64, arm/v7 ]
          include:
            - arch: amd64
              suffix: x86_64
            - arch: arm/v7
              suffix: arm32v7
            - arch: arm64
              suffix: arm64v8
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build the ${{ matrix.suffix }} classic build test image
        # We only want to confirm it builds with classic mode, nothing else
        run: |
          docker build --platform=linux/${{ matrix.arch }} --build-arg FLB_TARBALL="$FLB_TARBALL" -f ./dockerfiles/Dockerfile.${{ matrix.suffix }} ./dockerfiles/
        env:
          # Ensure we disable buildkit
          DOCKER_BUILDKIT: 0
          FLB_TARBALL: https://github.com/fluent/fluent-bit/archive/v${{ needs.pr-get-latest-tag.outputs.latest_tag }}.tar.gz
        shell: bash

    pr-set-final-status:
      runs-on: ubuntu-latest
      needs:
        - pr-set-pending-status
        - pr-image-tests-build-images
        - pr-image-tests-build-images
        - pr-image-tests-smoke-test-images
        - pr-image-tests-smoke-test-multiarch-images
        - pr-image-tests-classic-docker-build
      if: always()
      steps:
        - uses: technote-space/workflow-conclusion-action@v2

        - uses: Sibz/github-status-action@v1
          with:
            authToken: ${{secrets.GITHUB_TOKEN}}
            context: 'PR image tests'
            state: ${{ env.WORKFLOW_CONCLUSION }}
            sha: ${{ github.event.workflow_run.head_sha }}
